{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training\\\\ReactJS\\\\src\\\\FormFn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormFn = () => {\n  _s();\n\n  const tempFormData = {\n    username: '',\n    email: '',\n    password: ''\n  };\n  const [formData, setFormData] = useState(tempFormData);\n  const [formError, setFormError] = useState({});\n  const [showmessage, setShowmessage] = useState(false);\n\n  const handleInputChange = e => {\n    //console.log('input clicked....', e.target.name, e.target.value);\n    let formname = e.target.name;\n    let formvalue = e.target.value;\n    setFormData({ ...formData,\n      [formname]: formvalue\n    });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault(); //console.log('form submitted...');\n\n    validate(formData);\n\n    if (Object.keys(formError).length == 0) {\n      //call api for register - formData;\n      setShowmessage(true);\n      setFormData(tempFormData);\n    }\n  };\n\n  useEffect(() => {\n    console.log('Final Form Data', formData);\n  });\n\n  const validate = formData => {\n    const error = {};\n\n    if (!formData.username) {\n      error.username = 'Username should not be blank';\n    }\n\n    if (!formData.email) {\n      error.email = 'Email should not be blank';\n    }\n\n    if (!formData.password) {\n      error.password = 'Password should not be blank';\n    }\n\n    if (formData.password && formData.password.length < 5) {\n      error.password = 'Min length of password should be 5';\n    } // if(formData.username && formData.username.test(regex)) {\n    //     error.username = 'Min length of password should be 5';\n    // }\n\n\n    setFormError(error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), Object.keys(formError).length == 0 && showmessage && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"btn btn-outline-success text-success\",\n      children: \"Form submitted successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formError.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          class: \"form-control\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formError.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          class: \"form-control\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formError.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: handleFormSubmit,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormFn, \"WObJB8bT9vtdEzMxEdQkh2Si0r0=\");\n\n_c = FormFn;\nexport default FormFn;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormFn\");","map":{"version":3,"sources":["D:/Training/ReactJS/src/FormFn.js"],"names":["React","useEffect","useState","FormFn","tempFormData","username","email","password","formData","setFormData","formError","setFormError","showmessage","setShowmessage","handleInputChange","e","formname","target","name","formvalue","value","handleFormSubmit","preventDefault","validate","Object","keys","length","console","log","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst FormFn = () => {\r\n    const tempFormData = {username: '', email: '', password: ''};\r\n    const [formData, setFormData] = useState(tempFormData);\r\n    const [formError, setFormError] = useState({});\r\n    const [showmessage, setShowmessage] = useState(false);\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log('input clicked....', e.target.name, e.target.value);\r\n        let formname = e.target.name;\r\n        let formvalue = e.target.value;\r\n        setFormData({...formData, [formname]: formvalue});\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('form submitted...');\r\n        validate(formData);\r\n        if(Object.keys(formError).length == 0) {\r\n            //call api for register - formData;\r\n            setShowmessage(true);\r\n            setFormData(tempFormData);\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        console.log('Final Form Data', formData);\r\n    })\r\n\r\n    const validate = (formData) => {\r\n        const error = {};\r\n        if(!formData.username) {\r\n            error.username = 'Username should not be blank';\r\n        }\r\n        if(!formData.email) {\r\n            error.email = 'Email should not be blank';\r\n        }\r\n        if(!formData.password) {\r\n            error.password = 'Password should not be blank';\r\n        }\r\n        if(formData.password && formData.password.length < 5) {\r\n            error.password = 'Min length of password should be 5';\r\n        }\r\n        // if(formData.username && formData.username.test(regex)) {\r\n        //     error.username = 'Min length of password should be 5';\r\n        // }\r\n        setFormError(error);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <h2>Registration Form</h2>\r\n\r\n        {(Object.keys(formError).length == 0 && showmessage) && <h2 className='btn btn-outline-success text-success'>Form submitted successfully.</h2>}\r\n\r\n        <form>\r\n            <div class=\"form-group\">\r\n            <label>Username</label>\r\n            <input type=\"text\" class=\"form-control\" name=\"username\" value={formData.username} onChange={handleInputChange}/>\r\n            <div className='text-danger'>{formError.username}</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"email\" class=\"form-control\" name=\"email\" value={formData.email} onChange={handleInputChange}/>\r\n            <div className='text-danger'>{formError.email}</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" class=\"form-control\" name=\"password\" value={formData.password} onChange={handleInputChange}/>\r\n            <div className='text-danger'>{formError.password}</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n            <button type='submit' class=\"btn btn-primary\" onClick={handleFormSubmit}>Register</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormFn;\r\n"]},"metadata":{},"sourceType":"module"}