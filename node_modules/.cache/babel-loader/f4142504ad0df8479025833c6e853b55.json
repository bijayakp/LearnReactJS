{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training\\\\ReactJS\\\\src\\\\ToDoFn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDoFn = () => {\n  _s();\n\n  const [input_val, setInput] = useState('');\n  const [toDoList, setToDoList] = useState([]); // array of objects - id, todotext, status\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleClick = () => {\n    let temp = {\n      // id: parseInt(Math.random()*10000),\n      id: nanoid(),\n      todotext: input_val,\n      status: false\n    };\n    setToDoList([...toDoList, temp]);\n    setInput('');\n  };\n\n  const markDone = id => {\n    console.log('done marked...', id);\n    let temp = toDoList.map(item => {\n      if (item.id === id) {\n        item.status = !item.status;\n      }\n\n      return item;\n    });\n    setToDoList(temp);\n  };\n\n  const markDelete = id => {\n    console.log('mark delete...', id);\n    let temp = toDoList.filter(item => {\n      return item.id !== id;\n    });\n    setToDoList(temp);\n  };\n\n  useEffect(() => {\n    console.log('input', input_val);\n    console.log('setToDo List', toDoList);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input_val,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-sm\",\n          onClick: handleClick,\n          children: \"Add in To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 px-3 py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-secondary bg-opacity-25 px-3 py-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pending List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), toDoList && toDoList.map((item, index) => !item.status && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"col-6\",\n                children: item.todotext\n              }, `altudo ${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"col-2 btn btn-success btn-sm text-center\",\n                onClick: () => markDone(item.id),\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"col-2 btn btn-danger btn-sm text-center\",\n                onClick: () => markDelete(item.id),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 px-3 py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-secondary bg-opacity-25 px-3 py-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Completed List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), toDoList && toDoList.map((item, index) => item.status && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"col-6\",\n                children: item.todotext\n              }, `altudo ${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"col-4 btn btn-success btn-sm text-center\",\n                onClick: () => markDone(item.id),\n                children: \"Mark Not Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"col-2 btn btn-danger btn-sm text-center\",\n                onClick: () => markDelete(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToDoFn, \"tY/Flx9d24z4bt9v/96sPGiCJOQ=\");\n\n_c = ToDoFn;\nexport default ToDoFn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoFn\");","map":{"version":3,"sources":["D:/Training/ReactJS/src/ToDoFn.js"],"names":["React","useEffect","useState","nanoid","ToDoFn","input_val","setInput","toDoList","setToDoList","handleChange","e","target","value","handleClick","temp","id","todotext","status","markDone","console","log","map","item","markDelete","filter","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {nanoid} from 'nanoid';\r\n\r\n\r\nconst ToDoFn = () => {\r\n    const [input_val, setInput] = useState('');\r\n    const [toDoList, setToDoList] = useState([]); // array of objects - id, todotext, status\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    const handleClick = () => {\r\n        let temp = {\r\n            // id: parseInt(Math.random()*10000),\r\n            id: nanoid(),\r\n            todotext: input_val,\r\n            status: false\r\n        }\r\n        setToDoList([...toDoList, temp]);\r\n        setInput('');\r\n    }\r\n    const markDone = (id) => {\r\n        console.log('done marked...', id);\r\n        let temp = toDoList.map((item) => {\r\n            if(item.id === id) {\r\n                item.status = !item.status;\r\n            }\r\n            return item;\r\n        })\r\n        setToDoList(temp);\r\n    }\r\n    const markDelete = (id) => {\r\n        console.log('mark delete...', id);\r\n        let temp = toDoList.filter((item) => {\r\n            return item.id !== id\r\n        });\r\n        setToDoList(temp);\r\n    }\r\n    useEffect(() => {\r\n        console.log('input', input_val);\r\n        console.log('setToDo List', toDoList);\r\n    })\r\n    return(\r\n        <>\r\n            <h2>To Do App</h2>\r\n            <div className='row'>\r\n                <div className='col-12'>\r\n                    <input type=\"text\" value={input_val} onChange={handleChange}/>\r\n                    <button className='btn btn-primary btn-sm' onClick={handleClick}>Add in To Do</button>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-6 px-3 py-3'>\r\n                    <div className='bg-secondary bg-opacity-25 px-3 py-3'>\r\n                    <h3>Pending List</h3>\r\n                    <hr></hr>\r\n                        {toDoList && toDoList.map((item, index) => (\r\n                            !item.status && <>\r\n                            <div key={item.id} className=\"row\">\r\n                                <span className=\"col-6\" key={`altudo ${index}`}>{item.todotext}</span>\r\n                                <button className='col-2 btn btn-success btn-sm text-center' onClick={() => markDone(item.id)}>Done</button>\r\n                                <button className=\"col-2 btn btn-danger btn-sm text-center\" onClick={() => markDelete(item.id)}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </div>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className='col-6 px-3 py-3'>\r\n                    <div className='bg-secondary bg-opacity-25 px-3 py-3'>\r\n                    <h3>Completed List</h3>\r\n                    <hr></hr>\r\n                        {toDoList && toDoList.map((item, index) => (\r\n                            item.status && <>\r\n                            <div key={item.id} className=\"row\">\r\n                                <span className=\"col-6\" key={`altudo ${index}`}>{item.todotext}</span>\r\n                                <button className='col-4 btn btn-success btn-sm text-center' onClick={() => markDone(item.id)}>Mark Not Done</button>\r\n                                <button className=\"col-2 btn btn-danger btn-sm text-center\" onClick={() => markDelete(item.id)}>Delete</button>\r\n                            </div>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDoFn;"]},"metadata":{},"sourceType":"module"}