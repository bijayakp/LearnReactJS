{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training\\\\ReactJS\\\\src\\\\Home.js\";\nimport React from 'react';\nimport ChildComp2 from './ChildComp';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.increment_fn = () => {\n      console.log('increment clicked...'); // this.state = {\n      //     count:this.state.count + 1\n      // }\n      // this.forceUpdate\n\n      this.setState({ ...this.state,\n        count: this.state.count + 1,\n        addr: 'Count_ADDR' // count:this.state.count +1,\n        // addr: 'sdfsaef',\n        // city: this.state.city,\n        // email: this.state.email\n\n      }); // this.forceUpdate - focefully recalculate dom\n      //this.setState - update state and recalculate dom - async operation\n      //component api - compoent features/function\n\n      console.log(this.state.count); // old state values\n      // calling github api with page\n    };\n\n    this.decrement_fn = () => {\n      console.log('decrement clicked...'); // this.state = {\n      //     count:this.state.count - 1\n      // }\n      // this.forceUpdate\n\n      this.setState({\n        count: this.state.count - 1\n      });\n      console.log('after setstate - ', this.state.count); // old state values\n    };\n\n    this.update_addr_fn = () => {\n      this.setState({ ...this.state,\n        addr: 'GGN'\n      });\n    };\n\n    this.login_user = () => {\n      this.setState({ ...this.state,\n        loginStatus: !this.state.loginStatus\n      });\n    };\n\n    this.update_custom_count = num => {\n      console.log('num-----------------', num);\n      this.setState({ ...this.state,\n        count: this.state.count + num\n      });\n    };\n\n    this.display_input_value = event => {\n      console.log(event.target.value);\n      this.setState({ ...this.state,\n        input_val: event.target.value\n      });\n    };\n\n    console.log('constructor of class...');\n    this.state = {\n      count: 0,\n      addr: '',\n      city: '',\n      email: '',\n      loginStatus: false,\n      input_val: ''\n    };\n  } //this - referring to self object\n\n\n  componentDidMount() {\n    console.log('componentDidMount running...'); // call api to check login\n    // update loggin varibale in state\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate running...');\n    console.log('updated state - ', this.state.count);\n  }\n\n  render() {\n    console.log('render running...');\n    let city_name = \"GGN\";\n    const temp1 = 'temp1';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Altudo - Class Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Count = \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Addr = \", this.state.addr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"City = \", this.state.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email = \", this.state.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: this.increment_fn,\n        children: \"Increase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement_fn,\n        children: \"Decrease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.update_addr_fn,\n        children: \"Update address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.update_custom_count(5),\n        children: \"Update Count by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.input_val,\n        onChange: this.display_input_value.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(ChildComp2, {\n        city: city_name,\n        country: \"India\",\n        state: this.state.addr,\n        temp1: temp1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), !this.state.loginStatus && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login_user,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }, this), this.state.loginStatus && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login_user,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), this.state.loginStatus && true && true && true ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login_user,\n        children: \"Logout If Else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 69\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login_user,\n        children: \"Login If Else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 129\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home; // Practice - To Do List\n// Current Task - \n// counter\n// count\n// two buttons - increase decrease\n// online exam\n// parent component - // list of questions\n// single question - student will update the answer\n// grid of question - mark answers\n// timer also\n// next previous\n// temp Storage - State\n// storgage of single answer\n// timer - \n// transfer data - Props\n// parent to single qs\n// single qs - grid os qs\n// next previous clicked - single qs\n// stages - \n// mounting - first time component loading\n// re-rendering - updation\n// unmounting - leaving that component (delete all varialbles, varible, counter, async method  )\n// lifecycle methods\n// Mounting Phase : -\n// constructor() - first lifecycle\n// *render() - compulsory\n// componentDidMount() - run just after component mounting - just one time\n// Re-rendering\n// re-render() - virtual dom\n// componentDidUpdate() - run after updations - after every re-render\n// Unmounting\n// componentWillUnmount() - delete/cleaning\n// setState() - update state variable and start re-render\n// forceUpdate() - frcecfully re-render\n// Ways of Data Transfer\n// Props - \n// Context\n// Redux\n// conditional operartor\n// if - &&\n// if else - (true ? 'true' : 'false')\n// State vs Props (var, let, const) - Object\n// to store data inside component - pass data outside component\n// state values can update/change (mutable) - props values cant change. (read only / immutable)\n// Class Comp - no use in functional comp\n// props can be used - props can be used\n// Class Component - Statefull Component\n// Functional Component - Stateless Component","map":{"version":3,"sources":["D:/Training/ReactJS/src/Home.js"],"names":["React","ChildComp2","Button","Home","Component","constructor","increment_fn","console","log","setState","state","count","addr","decrement_fn","update_addr_fn","login_user","loginStatus","update_custom_count","num","display_input_value","event","target","value","input_val","city","email","componentDidMount","componentDidUpdate","render","city_name","temp1","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ChildComp2 from './ChildComp';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        console.log('constructor of class...');\r\n        this.state = {\r\n            count:0,\r\n            addr: '',\r\n            city: '',\r\n            email: '',\r\n            loginStatus: false,\r\n            input_val: ''\r\n        }\r\n    }\r\n    //this - referring to self object\r\n    increment_fn = () => {\r\n        console.log('increment clicked...');\r\n        // this.state = {\r\n        //     count:this.state.count + 1\r\n        // }\r\n        // this.forceUpdate\r\n        this.setState(\r\n            {\r\n                ...this.state, count:this.state.count + 1, addr:'Count_ADDR'\r\n\r\n                // count:this.state.count +1,\r\n                // addr: 'sdfsaef',\r\n                // city: this.state.city,\r\n                // email: this.state.email\r\n\r\n            }\r\n        )\r\n\r\n        // this.forceUpdate - focefully recalculate dom\r\n        //this.setState - update state and recalculate dom - async operation\r\n        //component api - compoent features/function\r\n\r\n        console.log(this.state.count);\r\n        // old state values\r\n        // calling github api with page\r\n    }\r\n\r\n    decrement_fn = () => {\r\n        console.log('decrement clicked...');\r\n        // this.state = {\r\n        //     count:this.state.count - 1\r\n        // }\r\n        // this.forceUpdate\r\n        this.setState(\r\n            {\r\n                count:this.state.count - 1\r\n            }\r\n        )\r\n        console.log('after setstate - ', this.state.count);\r\n        // old state values\r\n    }\r\n\r\n    update_addr_fn = () => {\r\n        this.setState(\r\n            {\r\n                ...this.state, addr:'GGN'\r\n            }\r\n        )\r\n    }\r\n\r\n    login_user = () => {\r\n        this.setState(\r\n            {\r\n                ...this.state, loginStatus:!this.state.loginStatus\r\n            }\r\n        )\r\n    }\r\n\r\n    update_custom_count= (num) => {\r\n        console.log('num-----------------', num);\r\n        this.setState(\r\n            {\r\n                ...this.state, count:this.state.count + num\r\n            }\r\n        )\r\n    }\r\n\r\n    display_input_value = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState(\r\n            {\r\n                ...this.state, input_val: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount running...');\r\n        // call api to check login\r\n        // update loggin varibale in state\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate running...');\r\n        console.log('updated state - ', this.state.count);\r\n    }\r\n\r\n    render() {\r\n        console.log('render running...');\r\n        let city_name=\"GGN\";\r\n        const temp1 = 'temp1'\r\n        return(\r\n            <div>\r\n                <div>Altudo - Class Component</div>\r\n                <div>Count = {this.state.count}</div>\r\n                <div>Addr = {this.state.addr}</div>\r\n                <div>City = {this.state.city}</div>\r\n                <div>Email = {this.state.email}</div>\r\n\r\n                <Button variant=\"secondary\" onClick={this.increment_fn}>Increase</Button>\r\n                <button onClick={this.decrement_fn}>Decrease</button>\r\n                <button onClick={this.update_addr_fn}>Update address</button>\r\n                <br></br><br></br>\r\n                <button onClick={() => this.update_custom_count(5)}>Update Count by 5</button>\r\n                <br></br><br></br>\r\n                <input type=\"text\" value={this.state.input_val} onChange={this.display_input_value.bind(this)}/>\r\n                <br></br><br></br>\r\n\r\n                <ChildComp2 city={city_name} country=\"India\" state={this.state.addr} temp1={temp1}/>\r\n\r\n\r\n                {!this.state.loginStatus && <button onClick={this.login_user}>Login</button>}\r\n                {this.state.loginStatus && <button onClick={this.login_user}>Logout</button>}\r\n\r\n                <br></br>\r\n                {(this.state.loginStatus && true && true && true) ? <button onClick={this.login_user}>Logout If Else</button> : <button onClick={this.login_user}>Login If Else</button>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n// Practice - To Do List\r\n\r\n\r\n\r\n// Current Task - \r\n// counter\r\n// count\r\n// two buttons - increase decrease\r\n\r\n\r\n// online exam\r\n// parent component - // list of questions\r\n// single question - student will update the answer\r\n// grid of question - mark answers\r\n// timer also\r\n// next previous\r\n\r\n\r\n\r\n// temp Storage - State\r\n// storgage of single answer\r\n// timer - \r\n\r\n\r\n// transfer data - Props\r\n// parent to single qs\r\n// single qs - grid os qs\r\n// next previous clicked - single qs\r\n\r\n\r\n\r\n\r\n// stages - \r\n// mounting - first time component loading\r\n// re-rendering - updation\r\n// unmounting - leaving that component (delete all varialbles, varible, counter, async method  )\r\n\r\n\r\n\r\n// lifecycle methods\r\n// Mounting Phase : -\r\n// constructor() - first lifecycle\r\n// *render() - compulsory\r\n// componentDidMount() - run just after component mounting - just one time\r\n\r\n\r\n// Re-rendering\r\n// re-render() - virtual dom\r\n// componentDidUpdate() - run after updations - after every re-render\r\n\r\n\r\n// Unmounting\r\n// componentWillUnmount() - delete/cleaning\r\n\r\n\r\n\r\n\r\n// setState() - update state variable and start re-render\r\n// forceUpdate() - frcecfully re-render\r\n\r\n\r\n// Ways of Data Transfer\r\n// Props - \r\n// Context\r\n// Redux\r\n\r\n\r\n\r\n// conditional operartor\r\n// if - &&\r\n// if else - (true ? 'true' : 'false')\r\n\r\n\r\n\r\n\r\n// State vs Props (var, let, const) - Object\r\n\r\n// to store data inside component - pass data outside component\r\n// state values can update/change (mutable) - props values cant change. (read only / immutable)\r\n// Class Comp - no use in functional comp\r\n// props can be used - props can be used\r\n\r\n\r\n// Class Component - Statefull Component\r\n// Functional Component - Stateless Component"]},"metadata":{},"sourceType":"module"}