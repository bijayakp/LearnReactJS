{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training\\\\ReactJS\\\\src\\\\RefFn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport RefFnChild from './RefFnChild';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RefFn = () => {\n  _s();\n\n  const inputRef1 = useRef();\n  const inputRef2 = useRef();\n  const outRef1 = useRef();\n  const countRef = useRef(0);\n  const childRef = useRef();\n  const [count, setCount] = useState(5);\n\n  const handleClick = () => {\n    console.log('button clicked...');\n    console.log(inputRef1.current.value);\n    console.log(inputRef2.current.value);\n    let name = inputRef1.current.value;\n    let password = inputRef2.current.value; //call api for validation\n\n    if (name == 'deepak' && password === '12345') {\n      outRef1.current.innerHTML = 'Login Successfull.';\n    } else {\n      outRef1.current.innerHTML = 'Login failed. Try again.';\n    }\n  };\n\n  const childUpdateCount = () => {\n    console.log('Child button clicked....');\n    setCount(count => count + 5);\n  };\n\n  const updateDataOnChild = () => {\n    childRef.current.value = 'My name is ABC';\n  };\n\n  useEffect(() => {\n    console.log('countref triggere on re-render', countRef.current);\n    countRef.current = countRef.current + 1;\n    console.log('countref triggere on re-render', countRef.current);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ref - Functional Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), \"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef1,\n      placeholder: \"Enter your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef2,\n      placeholder: \"Enter your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: outRef1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count from ref- \", countRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(RefFnChild, {\n      countTemp: count,\n      countTempFn: childUpdateCount,\n      ref: childRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateDataOnChild,\n      children: \"Click to update ref in child\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RefFn, \"KDTcUb6qwE9yLsNyMmlzLesJT2E=\");\n\n_c = RefFn;\nexport default RefFn;\n\nvar _c;\n\n$RefreshReg$(_c, \"RefFn\");","map":{"version":3,"sources":["D:/Training/ReactJS/src/RefFn.js"],"names":["React","useEffect","useRef","useState","RefFnChild","RefFn","inputRef1","inputRef2","outRef1","countRef","childRef","count","setCount","handleClick","console","log","current","value","name","password","innerHTML","childUpdateCount","updateDataOnChild"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport RefFnChild from './RefFnChild';\r\n\r\nconst RefFn = () => {  \r\n    const inputRef1 = useRef();\r\n    const inputRef2 = useRef();\r\n    const outRef1 = useRef();\r\n\r\n    const countRef = useRef(0);\r\n\r\n    const childRef = useRef();\r\n\r\n    const [count, setCount] = useState(5);\r\n\r\n    const handleClick = () => {\r\n        console.log('button clicked...');\r\n        console.log(inputRef1.current.value);\r\n        console.log(inputRef2.current.value);\r\n        let name = inputRef1.current.value;\r\n        let password = inputRef2.current.value;\r\n        //call api for validation\r\n        if(name == 'deepak' && password === '12345') {\r\n            outRef1.current.innerHTML = 'Login Successfull.'\r\n        }\r\n        else {\r\n            outRef1.current.innerHTML = 'Login failed. Try again.'\r\n        }\r\n    }\r\n\r\n\r\n    const childUpdateCount = () => {\r\n        console.log('Child button clicked....');\r\n        setCount(count => count+5);\r\n    }\r\n    const updateDataOnChild = () => {\r\n        childRef.current.value = 'My name is ABC';\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('countref triggere on re-render', countRef.current);\r\n        countRef.current = countRef.current + 1;\r\n        console.log('countref triggere on re-render', countRef.current);\r\n    })\r\n\r\n\r\n    return(\r\n        <>  \r\n        <h2>Ref - Functional Component</h2>\r\n            Name: <input type=\"text\" ref={inputRef1} placeholder=\"Enter your name\"/>\r\n                Password: <input type=\"text\" ref={inputRef2} placeholder=\"Enter your name\"/>\r\n                <button onClick={handleClick} >Click here...</button>\r\n                <div ref={outRef1}></div>\r\n\r\n\r\n\r\n\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                <div>Count from ref- {countRef.current}</div>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                <RefFnChild countTemp = {count} countTempFn = {childUpdateCount} ref={childRef} />\r\n                <button onClick={updateDataOnChild}>Click to update ref in child</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RefFn;\r\n"]},"metadata":{},"sourceType":"module"}