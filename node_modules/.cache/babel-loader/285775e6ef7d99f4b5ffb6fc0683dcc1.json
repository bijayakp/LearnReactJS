{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training\\\\ReactJS\\\\src\\\\FnComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FnComp = () => {\n  _s();\n\n  const [count, setCount] = useState(10000000);\n  const [count2, setCount2] = useState([1, 2, 3, 4, 5]);\n  const [status, setStatus] = useState(false); // count - state variable - its not an object - normal variable\n  // 0 - defining the type of state variable and initializing its value\n  // setCount - method to update that state variable - async mode\n  // Boolean, string, array, object, number\n  //names can be anything - variable and method\n  // state varibale can be manipulated just by its own method\n  //method cant update anything else\n\n  const increase = () => {\n    setCount(count + 1);\n  };\n\n  const decrease = () => {\n    setCount(count => count - 1);\n  };\n\n  const showDiv = () => {\n    setStatus(status => !status);\n    console.log(status);\n  };\n\n  useEffect(() => {\n    console.log(count, count2, status);\n    console.log('Use Effect triggered every time........');\n  }); // componentDidMount and componentDidUpdate\n\n  useEffect(() => {\n    console.log(count, count2, status);\n    console.log('Use Effect triggered once....');\n    fetch('https://api.coindesk.com/v1/bpi/currentprice.json').then(resp => {\n      return resp.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }, []); //componentDidMount\n\n  useEffect(() => {\n    console.log(count, count2, status);\n    console.log('Use Effect triggered on status update....');\n  }, [status]); //componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is a functional component.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increase,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrease,\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Div to show hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showDiv,\n      children: \"Show Hide Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FnComp, \"i92IpxJJ6+8+zgDPXweOJK9UuKo=\");\n\n_c = FnComp;\nexport default FnComp; // REACT HOOKS\n// State - useState\n// wordpress - hooks\n// useEffect - Lifecycle logics\n\nvar _c;\n\n$RefreshReg$(_c, \"FnComp\");","map":{"version":3,"sources":["D:/Training/ReactJS/src/FnComp.js"],"names":["React","useEffect","useState","FnComp","count","setCount","count2","setCount2","status","setStatus","increase","decrease","showDiv","console","log","fetch","then","resp","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,QAAD,CAAlC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC,CAHiB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMQ,QAAQ,GAAG,MAAM;AACnBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAGA,QAAMO,QAAQ,GAAG,MAAM;AACnBN,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;AACH,GAFD;;AAGA,QAAMQ,OAAO,GAAG,MAAM;AAClBH,IAAAA,SAAS,CAACD,MAAM,IAAI,CAACA,MAAZ,CAAT;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBE,MAAnB,EAA2BE,MAA3B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACH,GAHQ,CAAT,CAzBiB,CA6BjB;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBE,MAAnB,EAA2BE,MAA3B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAC,IAAAA,KAAK,CAAC,mDAAD,CAAL,CACCC,IADD,CACOC,IAAD,IAAU;AAChB,aAAOA,IAAI,CAACC,IAAL,EAAP;AACC,KAHD,EAICF,IAJD,CAIOG,IAAD,IAAU;AAChBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACC,KAND;AAOH,GAVQ,EAUP,EAVO,CAAT,CA/BiB,CA0CjB;;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBE,MAAnB,EAA2BE,MAA3B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACH,GAHQ,EAGP,CAACN,MAAD,CAHO,CAAT,CA5CiB,CAgDjB;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEM,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAMKH,MAAM,iBAAI;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YANf,eAQI;AAAQ,MAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAkBH,CAtED;;GAAMT,M;;KAAAA,M;AAwEN,eAAeA,MAAf,C,CAkBA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst FnComp = () => {\r\n    const [count, setCount] = useState(10000000);\r\n    const [count2, setCount2] = useState([1,2,3,4,5]);\r\n    const [status, setStatus] = useState(false);\r\n\r\n    // count - state variable - its not an object - normal variable\r\n    // 0 - defining the type of state variable and initializing its value\r\n    // setCount - method to update that state variable - async mode\r\n    // Boolean, string, array, object, number\r\n    //names can be anything - variable and method\r\n    // state varibale can be manipulated just by its own method\r\n    //method cant update anything else\r\n\r\n    \r\n    const increase = () => {\r\n        setCount(count + 1);\r\n    }\r\n    const decrease = () => {\r\n        setCount(count => count - 1);\r\n    }\r\n    const showDiv = () => {\r\n        setStatus(status => !status);\r\n        console.log(status);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(count, count2, status);\r\n        console.log('Use Effect triggered every time........')\r\n    })\r\n    // componentDidMount and componentDidUpdate\r\n\r\n    useEffect(() => {\r\n        console.log(count, count2, status);\r\n        console.log('Use Effect triggered once....')\r\n        fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\r\n        .then((resp) => {\r\n        return resp.json();\r\n        })\r\n        .then((data) => {\r\n        console.log(data);\r\n        })\r\n    },[])\r\n    //componentDidMount\r\n\r\n    useEffect(() => {\r\n        console.log(count, count2, status);\r\n        console.log('Use Effect triggered on status update....')\r\n    },[status])\r\n    //componentDidMount\r\n\r\n\r\n    \r\n    return(\r\n        <>\r\n            <div>This is a functional component.</div>\r\n            <div>{count}</div>\r\n            <button onClick={increase}>Increment</button>\r\n            <button onClick={decrease}>Decrement</button>\r\n\r\n            {status && <div><h2>Div to show hide</h2></div>}\r\n\r\n            <button onClick={showDiv}>Show Hide Button</button>\r\n\r\n            {/* HW - Implement Modal */}\r\n\r\n            {/* {data.bpi && data.bpi.map((item) => (\r\n                <div>{item.code}</div>\r\n            ))} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FnComp;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// REACT HOOKS\r\n// State - useState\r\n// wordpress - hooks\r\n\r\n// useEffect - Lifecycle logics\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}