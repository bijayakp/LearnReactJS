{"ast":null,"code":"var _jsxFileName = \"D:\\\\Training\\\\ReactJS\\\\src\\\\GitHub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GitHub = () => {\n  _s();\n\n  const [issuesArr, setIssuesArr] = useState([]);\n  const [pageNum, setPageNum] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  const [currentPageNum, setCurrentPageNum] = useState(1);\n  useEffect(() => {\n    fetch(`https://api.github.com/repositories/1296269/issues?page=${currentPageNum}&per_page=10`).then(resp => {\n      return resp.json();\n    }).then(data => {\n      //console.log(data);\n      setIssuesArr(data); // setIssuesArr([...issuesArr, ...data]);\n    });\n  }, [currentPageNum]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Github issues List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), pageNum && pageNum.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm btn-secondary\",\n      onClick: () => setCurrentPageNum(item),\n      children: [\"Page \", item]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) // <button className=\"button-github\" onClick={() => setCurrentPageNum(item)}>Page {item}</button>\n    ), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      children: \"Load More...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Login User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), issuesArr && issuesArr.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.user.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.user.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 41\n          }, this)]\n        }, item.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 37\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GitHub, \"8oyb8L4kZYSkT0Dg/nw3Y57lknk=\");\n\n_c = GitHub;\nexport default GitHub;\n\nvar _c;\n\n$RefreshReg$(_c, \"GitHub\");","map":{"version":3,"sources":["D:/Training/ReactJS/src/GitHub.js"],"names":["React","useEffect","useState","GitHub","issuesArr","setIssuesArr","pageNum","setPageNum","currentPageNum","setCurrentPageNum","fetch","then","resp","json","data","map","item","number","id","user","login","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAAD,CAAtC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,CAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAE,2DAA0DF,cAAe,cAA3E,CAAL,CACCG,IADD,CACOC,IAAD,IAAU;AACZ,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAHD,EAICF,IAJD,CAIOG,IAAD,IAAU;AACZ;AACAT,MAAAA,YAAY,CAACS,IAAD,CAAZ,CAFY,CAGZ;AACH,KARD;AASH,GAVQ,EAUP,CAACN,cAAD,CAVO,CAAT;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKQF,OAAO,IAAIA,OAAO,CAACS,GAAR,CAAaC,IAAD,iBACnB;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAE,MAAMP,iBAAiB,CAACO,IAAD,CAA7E;AAAA,0BAA2FA,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA,YADmB,CAEnB;AAFO,KALnB,eAWI;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACY;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ,EAQgBZ,SAAS,IAAIA,SAAS,CAACW,GAAV,CAAeC,IAAD,iBACvB;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKF,IAAI,CAACG,IAAL,CAAUC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKJ,IAAI,CAACG,IAAL,CAAUE;AAAf;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAASL,IAAI,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA,gBADS,CAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADJ;AAmCH,CApDD;;GAAMd,M;;KAAAA,M;AAsDN,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nconst GitHub = () => {\r\n    const [issuesArr, setIssuesArr] = useState([]);\r\n    const [pageNum, setPageNum] = useState([1,2,3,4,5,6,7,8,9,10]);\r\n    const [currentPageNum, setCurrentPageNum] = useState(1);\r\n\r\n    useEffect(() => {\r\n        fetch(`https://api.github.com/repositories/1296269/issues?page=${currentPageNum}&per_page=10`)\r\n        .then((resp) => {\r\n            return resp.json();\r\n        })\r\n        .then((data) => {\r\n            //console.log(data);\r\n            setIssuesArr(data);\r\n            // setIssuesArr([...issuesArr, ...data]);\r\n        })\r\n    },[currentPageNum])\r\n\r\n    return(\r\n        <>\r\n            <div>\r\n                Github issues List\r\n            </div>\r\n            {\r\n                pageNum && pageNum.map((item) => (\r\n                    <button className=\"btn btn-sm btn-secondary\" onClick={() => setCurrentPageNum(item)}>Page {item}</button>\r\n                    // <button className=\"button-github\" onClick={() => setCurrentPageNum(item)}>Page {item}</button>\r\n                ))\r\n            }\r\n\r\n            <button className='btn btn-primary btn-sm'>Load More...</button>\r\n            <div className='table-responsive'>\r\n                <table className='table'>\r\n                            <tr>\r\n                                <th>Number</th>\r\n                                <th>ID</th>\r\n                                <th>Login User</th>\r\n                                <th>URL</th>\r\n                            </tr>\r\n                            {\r\n                                issuesArr && issuesArr.map((item) => (                       \r\n                                    <tr key={item.number}>\r\n                                        <td>{item.number}</td>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.user.login}</td>\r\n                                        <td>{item.user.url}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GitHub;"]},"metadata":{},"sourceType":"module"}